{"version":3,"sources":["index.js"],"names":["canvas","document","getElementById","context","getContext","tileCount","tileSize","width","headX","headY","xVelocity","yVelocity","appleX","appleY","snakeParts","tailLength","then","elapsed","body","addEventListener","keyDown","SnakePart","x","y","drawGame","timeStamp","delta","clearScreen","changeSnakePosition","checkAppleCollision","drawApple","drawSnake","requestAnimationFrame","fillStyle","fillRect","clientWidth","clientHeight","i","length","part","console","log","push","shift","Math","floor","random","event","keyCode"],"mappings":"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","sourcesContent":[" const canvas = document.getElementById(\"game\");\r\n const context = canvas.getContext(\"2d\");\r\n\r\n const tileCount = 20;\r\n const tileSize = canvas.width/tileCount -2;\r\n\r\n let headX = 10;\r\n let headY = 10;\r\n\r\n let xVelocity = 0;\r\n let yVelocity = 0;\r\n\r\n let appleX = 5;\r\n let appleY = 5;\r\n\r\n const snakeParts = [];\r\n let tailLength = 0;\r\n\r\n let then =0; \r\n let elapsed = 0;\r\n\r\n document.body.addEventListener(\"keydown\", keyDown);\r\n\r\n class SnakePart{\r\n     constructor(x, y){\r\n         this.x =x;\r\n         this.y = y;\r\n     }\r\n }\r\n\r\n function drawGame(timeStamp){\r\n    let delta = timeStamp - then;\r\n    then = timeStamp;\r\n    clearScreen();\r\n    changeSnakePosition(delta);\r\n    checkAppleCollision();\r\n    drawApple();\r\n    drawSnake(delta);\r\n    requestAnimationFrame(drawGame)   \r\n }\r\n\r\nfunction clearScreen(){\r\n    context.fillStyle = \"black\";\r\n    context.fillRect(0, 0, canvas.clientWidth, canvas.clientHeight);\r\n}\r\n\r\nfunction drawSnake(delta){\r\n    elapsed += delta;\r\n    // console.log(snakeParts);\r\n    context.fillStyle = 'orange';\r\n    context.fillRect(headX*tileCount, headY*tileCount, tileSize, tileSize);\r\n    context.fillStyle= \"green\";\r\n    for(let i=0; i<snakeParts.length; i++){\r\n        let part = snakeParts[i];\r\n        if(part.x === headX && part.y === headY){\r\n            console.log(\"game over\");\r\n            break;\r\n        }\r\n    }\r\n    if(elapsed>1000){\r\n        snakeParts.push(new SnakePart(headX, headY));\r\n        elapsed=0;\r\n    }\r\n    if(snakeParts.length > tailLength){\r\n        snakeParts.shift();  \r\n    }\r\n}\r\n\r\nfunction drawApple(){\r\n    context.fillStyle =\"red\";\r\n    context.fillRect(appleX*tileCount, appleY*tileCount, tileSize, tileSize)\r\n}\r\n\r\nfunction changeSnakePosition(delta){\r\n    headX = headX + 2* xVelocity*delta*0.001;\r\n    headY = headY + 2* yVelocity*delta*0.001;\r\n}\r\n\r\nfunction checkAppleCollision(){\r\n    console.log(headY, appleY)\r\n    if( headX + 1 > appleX && headX < (appleX + 1) && (headY + 1) > appleY && headY < appleY+ 1){\r\n        console.log(\"collision\")\r\n        appleX = Math.floor(Math.random()* tileCount);\r\n        appleY = Math.floor(Math.random()* tileCount);\r\n    }\r\n}\r\n\r\nfunction keyDown(event){\r\n    if(event.keyCode == 38){\r\n        if(yVelocity ==1) return;\r\n            xVelocity = 0;\r\n            yVelocity = -1;    \r\n        \r\n    }\r\n    if(event.keyCode == 40){\r\n        if (yVelocity == -1) return;\r\n        console.log(event.keyCode)\r\n        xVelocity = 0;\r\n        yVelocity = 1;\r\n    }\r\n    if(event.keyCode == 37){\r\n        if(xVelocity == 1) return;\r\n        xVelocity =-1;\r\n        yVelocity = 0;\r\n    }\r\n    if(event.keyCode == 39){\r\n        if(xVelocity == -1) return;\r\n        xVelocity = 1;\r\n        yVelocity = 0;\r\n    }\r\n}\r\n\r\nrequestAnimationFrame(drawGame);"],"file":"index.dev.js"}