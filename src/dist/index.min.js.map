{"version":3,"sources":["index.js"],"names":["canvas","document","getElementById","context","getContext","tileCount","tileSize","headY","xVelocity","appleX","appleY","tailLength","then","body","elapsed","addEventListener","keyDown","x","SnakePart","y","_classCallCheck","this","clearScreen","timeStamp","changeSnakePosition","checkAppleCollision","drawApple","drawSnake","delta","requestAnimationFrame","drawGame","fillStyle","clientWidth","clientHeight","fillRect","headX","snakeParts","length","i","part","console","log","push","Math","random","floor","event","keyCode","yVelocity"],"mappings":"yHAAC,IAAMA,OAASC,SAASC,eAAe,QACjCC,QAAUH,OAAOI,WAAW,MAE5BC,UAAY,GAHZL,SAASC,OAASC,MAAAA,UAAe,EAGjCG,MAAS,GACTC,MAAQ,GAGVC,UAAJ,EAEIC,UAAJ,EAGIC,OAAJ,EACIC,OAAJ,EAGIC,WAAJ,GAEIC,WAAJ,EAGAX,KAASY,EAFLC,QAAU,EAKOb,SAAAY,KAAAE,iBAAA,UAAAC,aACRC,UACL,SAAAC,EAAAD,EAAAE,GAAAC,gBAAAC,KAAAH,GADAG,KAAKJ,EAAGA,EACRI,KAAKF,EAAIA,GAOdG,SAAAA,SAAWC,GACXC,IAAAA,EAAAA,EAAAZ,KACAa,KAAAA,EACAC,cACAC,oBAAAC,GACAC,sBACFH,YAFEC,UAAUC,GAIdC,sBAAsBC,UAGrB,SAAAR,cAFGnB,QAAQ4B,UAAY,QAIxB5B,QAASwB,SAAUC,EAAnB,EAAyB5B,OAAAgC,YAAAhC,OAAAiC,cAGrB9B,SAAOwB,UAAPC,GACAzB,SAAQ+B,EADR/B,QAAQ4B,UAAY,SAGpB5B,QAAS+B,SAAKC,MAACC,UAAWC,MAA1BhC,UAAsCC,SAAAA,UAClCH,QAAQ4B,UAAGK,QADf,IAAI,IAAIE,EAAE,EAAGA,EAAEF,WAAWC,OAAQC,IAAI,CAE/BC,IAAIA,EAAOJ,WAASI,GACnBC,GAAAA,EAAQC,IAAIN,OAAZI,EAAApB,IAAAZ,MAAA,CACAiC,QAAAC,IAAA,aACH,OAEK,IAAP3B,UACCsB,WAAAM,KAAoBxB,IAAAA,UAAUiB,MAAO5B,QACrCO,QAAA,GAEDsB,WAAWC,OAAS1B,YAApByB,WAAWC,QAKlB,SAASX,YAATvB,QAASuB,UAAW,MAChBvB,QAAQ4B,SAARtB,OAAAJ,UAAAK,OAAAL,UAAAC,SAAAA,UAIJ,SAASkB,oBAAoBI,GAA7BO,OAASX,EAAAA,UAAoBI,EAAM,KAC/BO,OAAgB,EAAG3B,UAAHoB,EAAA,KAIpB,SAASH,sBAATe,QAASf,IAAAA,MAAAA,QACLhB,OAAA+B,MAAYjC,GAAZ4B,MAAA1B,OAAA,GAAAC,OAAAH,MAAA,GAAAA,MAAAG,OAAA,IAEI8B,QAAQC,IAAI,aADZN,OAAAQ,KAAYlC,MAAU0B,KAAKS,SAAUvC,WACrCmC,OAAYG,KAAAE,MAAZF,KAAAC,SAAAvC,YAIP,SAAAW,QAAA8B,GAGG,GAAoB,IAAjBA,EAAMC,QAAc,CAD3B,GAAA,GAAS/B,UAAc,OACV+B,UAAW,EACbC,WAAe,EAIrB,GAAA,IAAAF,EAAAC,QAAA,CAEG,IAAkB,GAAdC,UAAiB,OADtBF,QAAMC,IAAND,EAAHC,SACQC,UAAS,EACbR,UAAYM,EAEZE,GAAA,IAAAA,EAASD,QAAT,CACH,GAAA,GAAAvC,UAAA,OAGGA,WAAY,EAFbsC,UAAA,EAECtC,GAAA,IAAAA,EAASuC,QAAT,CACAC,IAAA,GAAAA,UAAA,OACHxC,UAAA,EAIGwC,UAAY,GAAZA,sBAAAlB","file":"index.min.js","sourcesContent":[" const canvas = document.getElementById(\"game\");\r\n const context = canvas.getContext(\"2d\");\r\n\r\n const tileCount = 20;\r\n const tileSize = canvas.width/tileCount -2;\r\n\r\n let headX = 10;\r\n let headY = 10;\r\n\r\n let xVelocity = 0;\r\n let yVelocity = 0;\r\n\r\n let appleX = 5;\r\n let appleY = 5;\r\n\r\n const snakeParts = [];\r\n let tailLength = 0;\r\n\r\n let then =0; \r\n let elapsed = 0;\r\n\r\n document.body.addEventListener(\"keydown\", keyDown);\r\n\r\n class SnakePart{\r\n     constructor(x, y){\r\n         this.x =x;\r\n         this.y = y;\r\n     }\r\n }\r\n\r\n function drawGame(timeStamp){\r\n    let delta = timeStamp - then;\r\n    then = timeStamp;\r\n    clearScreen();\r\n    changeSnakePosition(delta);\r\n    checkAppleCollision();\r\n    drawApple();\r\n    drawSnake(delta);\r\n    requestAnimationFrame(drawGame)   \r\n }\r\n\r\nfunction clearScreen(){\r\n    context.fillStyle = \"black\";\r\n    context.fillRect(0, 0, canvas.clientWidth, canvas.clientHeight);\r\n}\r\n\r\nfunction drawSnake(delta){\r\n    elapsed += delta;\r\n    // console.log(snakeParts);\r\n    context.fillStyle = 'orange';\r\n    context.fillRect(headX*tileCount, headY*tileCount, tileSize, tileSize);\r\n    context.fillStyle= \"green\";\r\n    for(let i=0; i<snakeParts.length; i++){\r\n        let part = snakeParts[i];\r\n        if(part.x === headX && part.y === headY){\r\n            console.log(\"game over\");\r\n            break;\r\n        }\r\n    }\r\n    if(elapsed>1000){\r\n        snakeParts.push(new SnakePart(headX, headY));\r\n        elapsed=0;\r\n    }\r\n    if(snakeParts.length > tailLength){\r\n        snakeParts.shift();  \r\n    }\r\n}\r\n\r\nfunction drawApple(){\r\n    context.fillStyle =\"red\";\r\n    context.fillRect(appleX*tileCount, appleY*tileCount, tileSize, tileSize)\r\n}\r\n\r\nfunction changeSnakePosition(delta){\r\n    headX = headX + 2* xVelocity*delta*0.001;\r\n    headY = headY + 2* yVelocity*delta*0.001;\r\n}\r\n\r\nfunction checkAppleCollision(){\r\n    console.log(headY, appleY)\r\n    if( headX + 1 > appleX && headX < (appleX + 1) && (headY + 1) > appleY && headY < appleY+ 1){\r\n        console.log(\"collision\")\r\n        appleX = Math.floor(Math.random()* tileCount);\r\n        appleY = Math.floor(Math.random()* tileCount);\r\n    }\r\n}\r\n\r\nfunction keyDown(event){\r\n    if(event.keyCode == 38){\r\n        if(yVelocity ==1) return;\r\n            xVelocity = 0;\r\n            yVelocity = -1;    \r\n        \r\n    }\r\n    if(event.keyCode == 40){\r\n        if (yVelocity == -1) return;\r\n        console.log(event.keyCode)\r\n        xVelocity = 0;\r\n        yVelocity = 1;\r\n    }\r\n    if(event.keyCode == 37){\r\n        if(xVelocity == 1) return;\r\n        xVelocity =-1;\r\n        yVelocity = 0;\r\n    }\r\n    if(event.keyCode == 39){\r\n        if(xVelocity == -1) return;\r\n        xVelocity = 1;\r\n        yVelocity = 0;\r\n    }\r\n}\r\n\r\nrequestAnimationFrame(drawGame);"]}